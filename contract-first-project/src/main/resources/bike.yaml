openapi: 3.0.2
info:
  version: 1.0.0
  title: dkt-bikes
  license:
    name: MIT
servers:
  - url: 'http://decathlon.com/bikes/v1'
paths:
  /bikes:
    get:
      summary: List all bikes
      operationId: listBikes
      tags:
        - bikes
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of bikes
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bikes'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a bike
      operationId: createBikes
      tags:
        - bikes
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bike'
    parameters: []
  '/bikes/{bikeId}':
    get:
      summary: Info on a specific bike
      operationId: showBikeById
      parameters:
        - name: bikeId
          in: path
          required: true
          description: The id of the bike to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bike'
              examples:
                example-1:
                  value:
                    id: 0
                    name: string
                    color: string
                    brand: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - bikes
    parameters:
      - schema:
          type: string
        name: bikeId
        in: path
        required: true
components:
  schemas:
    Bike:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        color:
          type: string
        brand:
          type: string
      required:
        - id
        - name
    Bikes:
      type: array
      items:
        $ref: '#/components/schemas/Bike'
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
